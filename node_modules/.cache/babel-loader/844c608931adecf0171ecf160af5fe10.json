{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmad Saleh\\\\todo\\\\src\\\\component\\\\ProjectOverlay.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useProjectsValue } from '../context';\nexport const ProjectOverlay = ({\n  setProject,\n  showProjectOverlay,\n  setShowProjectOverlay\n}) => {\n  const {\n    projects\n  } = useProjectsValue();\n  return projects && showProjectOverlay && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-overlay\",\n    \"data-testid\": \"project-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"project-overlay__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, projects.map(project => /*#__PURE__*/React.createElement(\"li\", {\n    key: project.projectId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"project-overlay-action\",\n    onClick: () => {\n      setProject(project.projectId);\n      setShowProjectOverlay(false);\n    },\n    onKeyDown: e => {\n      if (e.key === 'Enter') {\n        setProject(project.projectId);\n        setShowProjectOverlay(false);\n      }\n    },\n    role: \"button\",\n    tabIndex: 0,\n    \"aria-label\": \"Select the task project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, project.name)))));\n};\nProjectOverlay.propTypes = {\n  projects: PropTypes.array\n};","map":{"version":3,"sources":["C:/Users/Ahmad Saleh/todo/src/component/ProjectOverlay.js"],"names":["React","PropTypes","useProjectsValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","projects","map","project","projectId","e","key","name","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAC7BC,EAAAA,UAD6B;AAE7BC,EAAAA,kBAF6B;AAG7BC,EAAAA;AAH6B,CAAD,KAIxB;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAeL,gBAAgB,EAArC;AAEA,SACEK,QAAQ,IACRF,kBADA,iBAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,mBAAY,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBACZ;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAY,wBADd;AAEE,IAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,UAAU,CAACK,OAAO,CAACC,SAAT,CAAV;AACAJ,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,KALH;AAME,IAAA,SAAS,EAAGK,CAAD,IAAO;AAChB,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBR,QAAAA,UAAU,CAACK,OAAO,CAACC,SAAT,CAAV;AACAJ,QAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AACF,KAXH;AAYE,IAAA,IAAI,EAAC,QAZP;AAaE,IAAA,QAAQ,EAAE,CAbZ;AAcE,kBAAW,yBAdb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBGG,OAAO,CAACI,IAhBX,CADF,CADD,CADH,CADF,CAHJ;AA+BD,CAtCM;AAwCPV,cAAc,CAACW,SAAf,GAA2B;AACzBP,EAAAA,QAAQ,EAAEN,SAAS,CAACc;AADK,CAA3B","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useProjectsValue } from '../context';\r\n\r\nexport const ProjectOverlay = ({\r\n  setProject,\r\n  showProjectOverlay,\r\n  setShowProjectOverlay,\r\n}) => {\r\n  const { projects } = useProjectsValue();\r\n\r\n  return (\r\n    projects &&\r\n    showProjectOverlay && (\r\n      <div className=\"project-overlay\" data-testid=\"project-overlay\">\r\n        <ul className=\"project-overlay__list\">\r\n          {projects.map((project) => (\r\n            <li key={project.projectId}>\r\n              <div\r\n                data-testid=\"project-overlay-action\"\r\n                onClick={() => {\r\n                  setProject(project.projectId);\r\n                  setShowProjectOverlay(false);\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    setProject(project.projectId);\r\n                    setShowProjectOverlay(false);\r\n                  }\r\n                }}\r\n                role=\"button\"\r\n                tabIndex={0}\r\n                aria-label=\"Select the task project\"\r\n              >\r\n                {project.name}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nProjectOverlay.propTypes = {\r\n  projects: PropTypes.array,\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from'react';import{firebase}from'../firebase';export var Checkbox=function Checkbox(_ref){var id=_ref.id,taskDesc=_ref.taskDesc;var archiveTask=function archiveTask(){firebase.firestore().collection('tasks').doc(id).update({archived:true});};return/*#__PURE__*/React.createElement(\"div\",{className:\"checkbox-holder\",\"data-testid\":\"checkbox-action\",onClick:function onClick(){return archiveTask();},onKeyDown:function onKeyDown(e){if(e.key==='Enter')archiveTask();},\"aria-label\":\"Mark \".concat(taskDesc,\" as done?\"),role:\"button\",tabIndex:0},/*#__PURE__*/React.createElement(\"span\",{className:\"checkbox\"}));};","map":{"version":3,"sources":["C:/Users/Ahmad Saleh/todo/src/component/Checkbox.js"],"names":["React","firebase","Checkbox","id","taskDesc","archiveTask","firestore","collection","doc","update","archived","e","key"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,aAAzB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAsB,IAAnBC,CAAAA,EAAmB,MAAnBA,EAAmB,CAAfC,QAAe,MAAfA,QAAe,CAC5C,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBJ,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,CAA6CL,EAA7C,EAAiDM,MAAjD,CAAwD,CACtDC,QAAQ,CAAE,IAD4C,CAAxD,EAGD,CAJD,CAMA,mBACE,2BACE,SAAS,CAAC,iBADZ,CAEE,cAAY,iBAFd,CAGE,OAAO,CAAE,yBAAML,CAAAA,WAAW,EAAjB,EAHX,CAIE,SAAS,CAAE,mBAACM,CAAD,CAAO,CAChB,GAAIA,CAAC,CAACC,GAAF,GAAU,OAAd,CAAuBP,WAAW,GACnC,CANH,CAOE,4BAAoBD,QAApB,aAPF,CAQE,IAAI,CAAC,QARP,CASE,QAAQ,CAAE,CATZ,eAWE,4BAAM,SAAS,CAAC,UAAhB,EAXF,CADF,CAeD,CAtBM","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { firebase } from '../firebase';\r\n\r\nexport const Checkbox = ({ id, taskDesc }) => {\r\n  const archiveTask = () => {\r\n    firebase.firestore().collection('tasks').doc(id).update({\r\n      archived: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"checkbox-holder\"\r\n      data-testid=\"checkbox-action\"\r\n      onClick={() => archiveTask()}\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Enter') archiveTask();\r\n      }}\r\n      aria-label={`Mark ${taskDesc} as done?`}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"checkbox\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  taskDesc: PropTypes.string.isRequired,\r\n};"]},"metadata":{},"sourceType":"module"}
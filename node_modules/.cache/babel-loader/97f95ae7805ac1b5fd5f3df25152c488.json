{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Ahmad Saleh\\\\todo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createContext,useContext,useState}from'react';export var SelectedProjectContext=createContext();export var SelectedProjectProvider=function SelectedProjectProvider(_ref){var children=_ref.children;var _useState=useState('INBOX'),_useState2=_slicedToArray(_useState,2),selectedProject=_useState2[0],setSelectedProject=_useState2[1];return/*#__PURE__*/React.createElement(SelectedProjectContext.Provider,{value:{selectedProject:selectedProject,setSelectedProject:setSelectedProject}},children);};export var useSelectedProjectValue=function useSelectedProjectValue(){return useContext(SelectedProjectContext);};","map":{"version":3,"sources":["C:/Users/Ahmad Saleh/todo/src/context/selected-project-context.js"],"names":["React","createContext","useContext","useState","SelectedProjectContext","SelectedProjectProvider","children","selectedProject","setSelectedProject","useSelectedProjectValue"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,QAA3C,KAA2D,OAA3D,CAGA,MAAO,IAAMC,CAAAA,sBAAsB,CAAGH,aAAa,EAA5C,CACP,MAAO,IAAMI,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACTH,QAAQ,CAAC,OAAD,CADC,wCAChDI,eADgD,eAC/BC,kBAD+B,eAGvD,mBACE,oBAAC,sBAAD,CAAwB,QAAxB,EACE,KAAK,CAAE,CAAED,eAAe,CAAfA,eAAF,CAAmBC,kBAAkB,CAAlBA,kBAAnB,CADT,EAGGF,QAHH,CADF,CAOD,CAVM,CAYP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,SAAMP,CAAAA,UAAU,CAACE,sBAAD,CAAhB,EAAhC","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SelectedProjectContext = createContext();\r\nexport const SelectedProjectProvider = ({ children }) => {\r\n  const [selectedProject, setSelectedProject] = useState('INBOX');\r\n\r\n  return (\r\n    <SelectedProjectContext.Provider\r\n      value={{ selectedProject, setSelectedProject }}\r\n    >\r\n      {children}\r\n    </SelectedProjectContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\r\n\r\nSelectedProjectProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};"]},"metadata":{},"sourceType":"module"}